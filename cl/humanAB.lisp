(defun getA(answer1 answer2)
  (let ((countA 0))
    (if (and (equal 4 (length answer1)) (equal 4 (length answer2)))
        (loop for x from 0 to 3
            do (let ((char1 (char answer1 x)) (char2 (char answer2 x)))
               (if (equal char1 char2)
                   (setf countA (+ 1 countA))
               )
            )
        )
    )
    (return-from getA countA)
  )
)

(defun getB(answer1 answer2)
  (let ((countB 0))
    (if (and (equal 4 (length answer1)) (equal 4 (length answer2)))
        (loop for x from 0 to 3
            do (loop for y from 0 to 3
                do (let ((char1 (char answer1 x)) (char2 (char answer2 y)))
                     (if (equal char1 char2)
                         (if (/= x y)
                             (setf countB (+ 1 countB))
                         )
                     )
                )
            )
        )
    )
    (return-from getB countB)
  )    
)

(defvar total '())
(loop for u from 0 to 9
   do (loop for v from 0 to 9
     do (loop for w from 0 to 9
        do (loop for x from 0 to 9
            do (if (and (/= u v) (/= u w) (/= u x) (/= v w) (/= v x) (/= w x))
               (setq total (append total (list (format NIL "~d~d~d~d" u v w x))))
            )
        )
     )
   )
)
(setf *random-state* (make-random-state t))
(defvar random-value (random (list-length total)))
(defvar answer (format NIL "~4,'0d" (nth random-value total)))
(loop (format t "Please input an answer: ")
    (finish-output nil)
    (block code-block1
        (let ((user-answer (read)))
            (if (equal NIL (numberp user-answer))
                (return-from code-block1)
            )
            (if (> user-answer 9999)
                (return-from code-block1)
            )
            (let* ((user-string (format NIL "~4,'0d" user-answer))
                  (a-value (getA answer user-string))
                  (b-value (getB answer user-string)))
                 (if (and (equal 4 a-value) (equal 0 b-value))
                     (block code-block2
                         (write-line "You guess the correct answer.")
                         (quit)
                     )
                 )
                 (format t "Result: ~d A ~d B.~%~%" a-value b-value)
            )
        )
    t)
)
